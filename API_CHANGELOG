AGAVI API CHANGELOG
===================

0.11.0 (November 3, 2007)

API Changes:
 action/

  CHG:
   YoudsFrameworkAction:
    CHG:
!    execute* & validate* & handleError: They now take the parameters (in form of an YoudsFrameworkRequestDataHolder) as parameter and shouldn't access the request parameters directly anymore
     execute & validate: its not required to define (execute|validate) anymore, but instead you can define execute(Read|Write|...) for each input method you want to handle
!    getCredential: renamed to getCredentials()
!    getDefaultView: renamed to getDefaultViewName()
    ADD:
     isSimple: return true to put an action into simple mode
    REM:
!    getRequestMethods: gone, this is now handled by the existance of (execute|validate)(Read|Write|...) methods

  REM:
   YoudsFrameworkActionStack & YoudsFrameworkActionStackEntry:
!    superseded by YoudsFrameworkExecutionContainer


 config/
  The entire config management has been adjusted to support different 
  configuration formats. The new YoudsFrameworkConfigValueHolder class represenets a
  tree like data structure which gets created by the parsers for the specific
  configuration formats.

  ADD:
   YoudsFrameworkConfig:
     a new class for storing the configuration entries for the framework in a "registry"

   YoudsFrameworkConfigParser
     a new class representing an abstract configuration parser

   YoudsFrameworkConfigValueHolder
     a new class representing a configuration value (with attributes and childs or a value)

  REM:
   IniConfigHandler:
!    is completely replaced by YoudsFrameworkConfigHandler (which is independant of the config format)

   YoudsFrameworkParameterParser:
!    removed, not needed anymore

  CHG:
   YoudsFrameworkConfigCache:
    ADD:
     parseConfig: a new method to parse a configuration file with the parser defined for its extension
    CHG:
     checkConfig: a new optional string parameter for specifying the context
     clearCache: the directory parameter is now optional
     getCacheName: a new optional string parameter for specifying the context
!    import: a string parameter specifying the the context as been inserted at position 2 (so once is now the 3. parameter)

   YoudsFrameworkConfigHandler:
    ADD:
     getValidationFile: a new method to retrieve the validation file path
     getItemParameters: a new method to get the parameters entries of a configuration node
     orderConfigurations: a new method to order the configuration blocks and taking environment and context parameters into account
    CHG:
     execute: has the context name as a new string parameter (defaults to null)
!    initialize: now takes the new validation file path as the first parameter and the parameters as the second
!    literalize: returns the php value now instead of a php "code" representation
!    replaceConstants: doesn't return any constants anymore but instead values from the YoudsFrameworkConfig registry
    REM:
!    addReplacement: removed


 controller/

  ADD:
   YoudsFrameworkExecutionContainer:
     Replace action stacks, fully encapsulate action executions

   YoudsFrameworkOutputType:
     Holds all information about an Output Type.

  REM:
   FrontWebController & PageWebController:
!    removed, these cases are now handled by the general controller and the routing

  CHG:
   YoudsFrameworkController:
    ADD:
     loadFilters: new method to load the filters into a filterchain
     getGlobalResponse: new method
     getOutputType: retrieves an YoudsFrameworkOutputType instance
    CHG:
     dispatch: now already implemented here and takes parameters as parameter
     actionExists: renamed to resolveAction, the action name is now optional and there is 'auto resolving' in place
     initialize: new parameters argument
     getAction / getView: now named createActionInstance / createViewInstance
    REM:
     forward: removed
!    getGlobalModel & getModel: this is now handled by YoudsFrameworkContext::getModel
!    getInstance: removed, now handled via the YoudsFrameworkContext instance
!    newInstance: removed now handled via the YoudsFrameworkContext instance
!    registerShutdownListener: removed
!    setExecutionFilterClassName: removed, this is now handled via the configuration
!    inCLI: removed
!    redirect: moved to YoudsFrameworkResponse

   YoudsFrameworkWebController:
    CHG:
     initalize: now takes parameters as second parameter
    REM:
!    genUrl: removed, this is now done via YoudsFrameworkRouting::gen()
     getContentType: removed
     setContentType: removed


 core/
  ADD:
   YoudsFramework:
     new class for bootstrapping youds

  REM:
   YoudsFrameworkObject:
!    removed, not needed anymore

  CHG:
   YoudsFrameworkContext:
    ADD:
     getName: new method
     getModel: moved from YoudsFrameworkController
     getLoggerManager: new method
     getRouting: new method
     getTranslationManager: new method
     getFactoryInfo: new method
     shutdown: new method
    CHG:
!    getInstance: if you don't pass the profile parameter you have to set core.default_context in config
!    initialize: the overrides parameter is gone
    REM:
!    getActionName: removed
!    getActionStack: removed
!    getModuleDirectory: removed
!    getModuleName: removed
!    getSecurityFilter: removed


 database/
  All the database class names have been renamed to be proper camelcased (no more ...MySQL...)

  YoudsFrameworkDatabase:
    getDatabaseManager: new method
!   initialize: now takes the databasemanager as first parameter and the parameters as second (they were the only params)

  YoudsFrameworkDatabaseManager:
!   initiliaze: now takes the context and optional parameters as parameter


 date/
  New as part of the i18n features, handles various date parsing and formatting things as well as calendars


 exception/
  YoudsFrameworkException:
!   getName: removed
!   setName: removed
!   printStackTrace: format parameter gone and 3 new parameters now


 filter/
  The filter handling has changed a little (there are different types of filters and interfaces for them)

  BasicSecurityFilter:
!   renamed to YoudsFrameworkSecurityFilter

  YoudsFrameworkFilter:
!   execute: now takes an YoudsFrameworkResponse as additional parameter

  SecurityFilter:
!   is now an interface (YoudsFrameworkISecurityFilter)


 logging/
  The logging levels are now bitmasks so they can be combined using binary or.
  YoudsFrameworkAppender:
!   initialize: now takes an YoudsFrameworkContext as first parameter and the parameters are now optional
    getContext: new method

  YoudsFrameworkFileAppender:
!   initialize: now takes an YoudsFrameworkContext as first parameter and the parameters are now optional
!   _getHandle: renamed to getHandle

  YoudsFrameworkLogger:
    ALL: new class constant specifying all log levels
!   setPriority: renamed to setLevel

  YoudsFrameworkLoggerManager:
!   initialize: not static anymore, now takes an YoudsFrameworkContext as first parameter and optional parameters as second parameter
    getContext: new method
!   getLogger: not static anymore
!   getLoggerNames: not static anymore
!   hasLogger: not static anymore
!   removeLogger: not static anymore
!   setLogger: not static anymore
!   log: not static anymore
!   shutdown: not static anymore

  YoudsFrameworkMailAppender:
!   removed

  YoudsFrameworkMessage:
    __construct: priority renamed to level
!   setPriority: renamed to setLevel
!   getPriority: renamed to getLevel

  YoudsFrameworkStderrAppender:
!   initialize: now takes an YoudsFrameworkContext as first parameter and the parameters are now optional

  YoudsFrameworkStdoutAppender:
!   initialize: now takes an YoudsFrameworkContext as first parameter and the parameters are now optional


 model/
  YoudsFrameworkModel:
    initialize: now takes parameters as optional second parameter

  SingletonModel:
!   removed, now handled by simply implementing YoudsFrameworkISingletonModel


 renderer/
  All new :) (handles stuff previously handled by the view)


 request/
  ADD:
   YoudsFrameworkRequestDataHolder & YoudsFrameworkWebRequestDataHolder:
     Hold all request data - parameters, files, cookies, headers and so on
   YoudsFrameworkUploadedFile:
     Represents an uploaded file

  CHG:
   HTTPSRequest:
!    renamed to YoudsFrameworkSecureWebRequest

   YoudsFrameworkRequest:
!    all constants have been removed, these are now simply strings (read, write, ...), the error handling has been changed slightly
!    does not contain any request data directly anymore, has a 
    ADD:
     getContext: new method
     toggleLock: new method
     getRequestDataHolder: gets the global request data holder
    CHG:
     initialize: not abstract anymore
     shutdown: not abstract anymore
!    getMethod: returns string instead of int
!    setMethod: takes a string instead of an int as parameter
    REM:
!    extractParameters: removed
!    newInstance: removed now handled via the YoudsFrameworkContext instance
!    All error methods (getErrors(), hasError() and so on) moved into YoudsFrameworkValidationManager
!    All parameter/file/cookie accessors gone, now handled by request data holders

   YoudsFrameworkWebRequest:
    ADD:
     getUrlScheme: new method
     getUrlHost: new method
     getUrlPort: new method
     getUrlAuthority: new method
     getRequestUri: new method
     getUrlPath: new method
     getUrlQuery: new method
     getUrl: new method
     hasCookie: new method
    REM:
!    setCookie: moved to YoudsFrameworkWebResponse


 response/
  New. Contains response data and sends it


 translation/
  New as part of the i18n features


 user/
  ADD:
   YoudsFrameworkISecurityUser: new interface for security user
   YoudsFrameworkRbacSecurityUser: new class

  REM:
   BasicSecurityUser: merged into YoudsFrameworkSecurityUser

  CHG:
   YoudsFrameworkUser:
    ADD:
     getStorageNamespace: new method
!    newInstance: removed now handled via the YoudsFrameworkContext instance

   YoudsFrameworkSecurityUser:
    CHG:
!    hasCredential: renamed to hasCredentials


 util/
  ADD:
   YoudsFrameworkArrayPathDefinition:
     new class
   YoudsFrameworkAttributeHolder:
     new class
   YoudsFrameworkDecimalFormatter:
     new class
   YoudsFrameworkInflector:
     new class
   YoudsFrameworkVirtualArrayPath:
     new class

  CHG:
   YoudsFrameworkParameterHolder:
    CHG:
     getParameter: now supports array syntax in the name
     hasParameter: now supports array syntax in the name

   YoudsFrameworkToolkit:
    ADD:
     mkdir: new method
     stringBase: new method
     clearCache: new method

    REM:
!    extractClassName: removed
!    isSubClass: removed
!    classHeritage: removed

  REM:
   ConversionPattern
   ShutdownListener


 validation/
  completely rewritten


 view/
  ADD:
   YoudsFrameworkTemplateLayer, YoudsFrameworkStreamTemplateLayer & YoudsFrameworkFileTemplateLayer
     These handle template layering

  CHG:
   YoudsFrameworkView:
!    all constants have been removed, simply use the strings now
    ADD:
     getResponse: new method

    CHG:
!    execute: now takes the parameters as array
!    initialize: takes optional attributes as second parameter
!    setDecoratorTemplate: the template parameter shouldn't contain the file extension, added second parameter to reenable that behaviour
     setSlot: new parameter to specify additional parameters to the slot
!    setTemplate: the template parameter shouldn't contain the file extension, added second parameter to reenable that behaviour

    REM:
!    decorate: moved to YoudsFrameworkRenderer
!    getEngine: moved to YoudsFrameworkRenderer
!    importAttributes: removed
!    preRenderCheck: moved to YoudsFrameworkRenderer
!    render: moved to YoudsFrameworkRenderer

  REM:
   FormPHPView: removed
   PHPView: moved to YoudsFrameworkPhpRenderer
   SmartyView: moved to YoudsFrameworkSmartyRenderer
   XSLView: moved to YoudsFrameworkXslRenderer
